generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}


model Account {
  id                 String  @id @map("_id") @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.String
  access_token       String?  @db.String
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.String
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @map("_id") @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @map("_id") @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  lessons       Lesson[]
}

model Lesson {
  id      String @id @map("_id") @default(cuid())
  title   String @unique
  text    String
  level   Int
  auth    User?   @relation(fields: [userId], references: [id])
  userId  String?
}

model VerificationToken {
  id         String   @id @map("_id") @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model texts {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  audioUrl    String?
  content     String
  dynasty     String
  remark      String?
  shangxi     String?
  title       String
  translation String?
  type        String[]
  writer      String
}
