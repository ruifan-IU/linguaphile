generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid()) @map("_id")
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid()) @map("_id")
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid()) @map("_id")
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  lessons       Lesson[]
  words         Word[]
}

model Lesson {
  id     String  @id @default(cuid()) @map("_id")
  title  String
  text   String
  imageId String
  level  Int
  auth   User?   @relation(fields: [userId], references: [id])
  userId String?
}

model VerificationToken {
  id         String   @id @default(cuid()) @map("_id")
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Language {
  id    String @id @default(cuid()) @map("_id")
  name  String @unique
  code  String @unique
  words Word[]
}

model Word {
  id          String   @id @default(cuid()) @map("_id")
  phrase      String
  translation String
  familiarity Int
  languageId  String
  userId      String
  language    Language @relation(fields: [languageId], references: [id])
  user        User     @relation(fields: [userId], references: [id])

  @@unique([phrase, languageId, userId])
}
